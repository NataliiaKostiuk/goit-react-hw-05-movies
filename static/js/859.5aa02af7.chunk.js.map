{"version":3,"file":"static/js/859.5aa02af7.chunk.js","mappings":"sTAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8Q,SCDVE,EAAW,SAAC,GAAU,IAATC,EAAQ,EAARA,GACtB,OACI,SAACJ,EAAD,CAAaI,GAAIA,EAAjB,SAAqB,WAE5B,E,UCHYC,EAAYJ,EAAAA,GAAAA,IAAH,uEAMTK,EAAWL,EAAAA,GAAAA,IAAH,sGAMRM,GAAUN,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8MCVPO,EAAe,SAAC,GAAgB,IAAD,IAAbC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACpDC,EAA+EP,EAA/EO,YAAaC,EAAkER,EAAlEQ,MAAMC,EAA4DT,EAA5DS,GAAIC,EAAwDV,EAAxDU,KAAMC,EAAkDX,EAAlDW,eAAgBC,EAAkCZ,EAAlCY,SAAUC,EAAwBb,EAAxBa,OAAOC,EAAiBd,EAAjBc,aAOtE,OAAQ,iCACH,SAACpB,EAAD,CAAUC,GAAKQ,EAAoBY,WACpC,UAACnB,EAAD,YACI,gBAAKoB,KAAKC,EAAAA,EAAAA,GAAgBV,EAAa,KAAMW,IAAKV,KAClD,4BACA,wBAAKA,GAASE,GAAQC,KACtB,yBAAG,gBAAcQ,KAAKC,MAAqB,GAAfN,GAAmB,QAC/C,wBAAI,cACJ,uBAAIF,KACA,uBAfM,SAACC,GAChB,QAAcQ,IAAVR,EAGH,OAAOA,EAAOS,KAAI,SAAAC,GAAE,OAAIA,EAAGb,IAAP,IAAac,KAAK,MACzC,CAUeC,CAAUZ,YAGjB,UAAChB,EAAD,YACD,SAACC,EAAD,CAASH,GAAE,kBAAac,EAAb,SAAuBJ,MAAO,CAAEC,KAAML,GAAjD,SAA6D,UAC7D,SAACH,EAAD,CAASH,GAAE,kBAAac,EAAb,WAAyBJ,MAAO,CAAEC,KAAML,GAAnD,SAAgE,eAExE,SAAC,EAAAyB,SAAD,WACK,SAAC,KAAD,QAIR,EC3Bc,SAASC,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAO5B,EAAP,KAAe6B,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAEA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAcI,GAAd,WACMC,GAASC,EAAAA,EAAAA,MAmBf,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACCH,GAAS,GACTD,GAAW,GAFZ,mBAIuBK,EAAAA,EAAAA,IAAeH,EAAOI,SAJ7C,OAIUC,EAJV,OAKIC,EAAAA,GAAAA,QAAc,yBACdV,EAAQS,GANZ,kDAQIC,EAAAA,GAAAA,MAAA,qBARJ,yBAUKR,GAAW,GAVhB,8EADY,uBAAC,WAAD,wBAcZS,EACH,GAAE,CAACP,EAAOI,WAEP,gCACKP,IAAW,SAAC,IAAD,KACZ,SAAC/B,EAAD,CAAcC,OAAQA,KAC1B,SAAC,EAAA0B,SAAD,CAAUe,SAAU,cAApB,UACF,SAAC,KAAD,QAIL,C","sources":["components/LinkBack/LinkBack.styled.js","components/LinkBack/LinkBack.jsx","components/movieDetails/movieDetails.styled.js","components/movieDetails/movieDetails.jsx","pages/MovieDescription.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const LinkGoBack = styled(NavLink)`\nfont-weight: 500;\nposition:fixed;\ntext-decoration: none;\ncolor:rgb(2, 35, 72);\ndisplay: inline-block;\npadding: 7px;\nborder-radius: 10px;\nbackground-color:lightgrey ;\nmargin: 10px;\n  & :hover {\n    color: rgba(80, 155, 10, 0.789);\n  }\n`","import{LinkGoBack } from './LinkBack.styled'\n\nexport const LinkBack = ({to}) => {\n    return (\n        <LinkGoBack  to={to}>Go Back</LinkGoBack >\n    )\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n \nexport const Container = styled.div`\nmargin-top: 50px;\ndisplay: flex;\ngap: 20px;\n`;\n \nexport const WrapLink = styled.div`\nwidth:100%;\nbackground-color:rgba(204, 200, 200, 0.8);\nborder-radius: 5px;\n`;\n\nexport const BtnLink = styled(NavLink)`\ndisplay: inline-block;\npadding: 20px;\nmargin-left:30px;\ntext-decoration: none;\nfont-size: large;\ncolor:rgb(2, 35, 72);\n  &.active {\n    color: rgba(80, 155, 10, 0.789);\n  }\n`","import { LinkBack } from \"components/LinkBack/LinkBack\";\nimport { imageValidation } from \"components/validImage\";\nimport { Outlet,useLocation } from \"react-router-dom\";\nimport { Suspense,useRef } from \"react\";\nimport { Container, WrapLink,BtnLink } from \"./movieDetails.styled\";\nexport const MovieDetails = ({ object }) => {\n     const location = useLocation();\n\n     const backLinkLocationRef = useRef(location.state?.from ?? '/movies')\n    const { poster_path, title,id, name, original_title, overview, genres,vote_average } = object;\n    const getGenres = (genres) => {\n       if (genres=== undefined) {\n        return\n       } \n        return genres.map(el => el.name).join(' | '); \n    }\n    return (<>\n         <LinkBack to= {backLinkLocationRef.current}/>\n        <Container>\n            <img src={imageValidation(poster_path, 200)} alt={title} />\n            <div>\n            <h2>{title || name || original_title}</h2>\n            <p> User Score: {Math.trunc(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n                <p>{getGenres(genres) }</p>\n            </div>\n        </Container>\n             <WrapLink>\n            <BtnLink to={`/movies/${id}/cast`}state={{ from: location }}>Cast</BtnLink>\n            <BtnLink to={`/movies/${id}/review`}state={{ from: location }} >Review</BtnLink> \n            </WrapLink>\n    <Suspense>\n         <Outlet />\n    </Suspense>\n    </>    \n    )\n}\n\n","\nimport { useEffect, useState,Suspense } from \"react\";\nimport toast from 'react-hot-toast';\nimport { Loader } from \"Loader/loader\";\nimport { fetchMovieById} from \"components/ApiService\";\nimport {  useParams, Outlet } from \"react-router-dom\";\nimport { MovieDetails } from \"components/movieDetails/movieDetails\";\n\n\n\nexport default function MovieDescription ()  {\n    const [object, setData] = useState({});\n    const [loading, setLoading] = useState(false);\n    // eslint-disable-next-line\n    const [error, setError] = useState(false);\n    const params = useParams();\n;\n\n    useEffect(() => {\n        async function getMovieById() {\n         setError(false);\n         setLoading(true);            \n        try {\n            const data = await fetchMovieById(params.movieId);\n            toast.success('Successfully created!');\n            setData(data);\n        } catch (error) {\n            toast.error(`This is an error!`);            \n        } finally {\n             setLoading(false);            \n        }\n        }\n        getMovieById()\n    }, [params.movieId])\n    return (\n        <>\n            {loading && <Loader />}            \n            <MovieDetails object={object} /> \n        <Suspense fallback={'LOADING ...'}>\n      <Outlet />\n    </Suspense>      \n     </>\n    )\n}\n"],"names":["LinkGoBack","styled","NavLink","LinkBack","to","Container","WrapLink","BtnLink","MovieDetails","object","location","useLocation","backLinkLocationRef","useRef","state","from","poster_path","title","id","name","original_title","overview","genres","vote_average","current","src","imageValidation","alt","Math","trunc","undefined","map","el","join","getGenres","Suspense","MovieDescription","useState","setData","loading","setLoading","setError","params","useParams","useEffect","fetchMovieById","movieId","data","toast","getMovieById","fallback"],"sourceRoot":""}