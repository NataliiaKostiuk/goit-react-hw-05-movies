{"version":3,"file":"static/js/859.b66ae1d4.chunk.js","mappings":"gUAGaA,EAAYC,EAAAA,GAAAA,IAAH,oDAKTC,EAAWD,EAAAA,GAAAA,IAAH,sGAMRE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8M,SCTPI,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,EAA+ED,EAA/EC,YAAaC,EAAkEF,EAAlEE,MAAMC,EAA4DH,EAA5DG,GAAIC,EAAwDJ,EAAxDI,KAAMC,EAAkDL,EAAlDK,eAAgBC,EAAkCN,EAAlCM,SAAUC,EAAwBP,EAAxBO,OAAOC,EAAiBR,EAAjBQ,aAOtE,OAAQ,iCACJ,UAACd,EAAD,YACI,gBAAKe,KAAKC,EAAAA,EAAAA,GAAgBT,EAAa,KAAMU,IAAKT,KAClD,4BACA,wBAAKA,GAASE,GAAQC,KACtB,yBAAG,gBAAcO,KAAKC,MAAqB,GAAfL,GAAmB,QAC/C,wBAAI,cACJ,uBAAIF,KACA,uBAdM,SAACC,GAChB,QAAcO,IAAVP,EAGH,OAAOA,EAAOQ,KAAI,SAAAC,GAAE,OAAIA,EAAGZ,IAAP,IAAaa,KAAK,MACzC,CASeC,CAAUX,YAGjB,UAACX,EAAD,YACD,SAACC,EAAD,CAASsB,GAAE,kBAAahB,EAAb,SAAX,SAAmC,UACnC,SAACN,EAAD,CAASsB,GAAE,kBAAahB,EAAb,WAAX,SAAsC,eAE9C,SAAC,EAAAiB,SAAD,WACK,SAAC,KAAD,QAIR,EC9BYC,GAAa1B,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6PCDV2B,EAAW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACtB,OACI,SAACF,EAAD,CAAaF,GAAII,EAAjB,SAA+B,WAEtC,ECKc,SAASC,IAAsB,IAAD,IACzC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOzB,EAAP,KAAe0B,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAEA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAcI,GAAd,WACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACCL,GAAS,GACTD,GAAW,GAFZ,mBAIuBO,EAAAA,EAAAA,IAAeL,EAAOM,SAJ7C,OAIUC,EAJV,OAKIC,EAAAA,GAAAA,QAAc,yBACdZ,EAAQW,GANZ,kDAQIC,EAAAA,GAAAA,MAAA,qBARJ,yBAUKV,GAAW,GAVhB,8EADY,uBAAC,WAAD,wBAcZW,EACH,GAAE,CAACT,EAAOM,WAEP,iCACC,SAACd,EAAD,CAAUC,aAAY,oBAAGS,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,YAC7Cd,IAAW,SAAC,IAAD,KACZ,SAAC5B,EAAD,CAAcC,OAAQA,KAC1B,SAAC,EAAAoB,SAAD,CAAUsB,SAAU,cAApB,UACF,SAAC,KAAD,QAIL,C","sources":["components/movieDetails/movieDetails.styled.js","components/movieDetails/movieDetails.jsx","components/LinkBack/LinkBack.styled.js","components/LinkBack/LinkBack.jsx","pages/MovieDescription.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n \nexport const Container = styled.div`\ndisplay: flex;\ngap: 20px;\n`;\n \nexport const WrapLink = styled.div`\nwidth:100%;\nbackground-color:rgba(204, 200, 200, 0.8);\nborder-radius: 5px;\n`;\n\nexport const BtnLink = styled(NavLink)`\ndisplay: inline-block;\npadding: 20px;\nmargin-left:30px;\ntext-decoration: none;\nfont-size: large;\ncolor:rgb(2, 35, 72);\n  &.active {\n    color: rgba(80, 155, 10, 0.789);\n  }\n`","\nimport { imageValidation } from \"components/validImage\";\nimport { Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { Container, WrapLink,BtnLink } from \"./movieDetails.styled\";\nexport const MovieDetails = ({ object }) => {\n    const { poster_path, title,id, name, original_title, overview, genres,vote_average } = object;\n    const getGenres = (genres) => {\n       if (genres=== undefined) {\n        return\n       } \n        return genres.map(el => el.name).join(' | '); \n    }\n    return (<>\n        <Container>\n            <img src={imageValidation(poster_path, 200)} alt={title} />\n            <div>\n            <h2>{title || name || original_title}</h2>\n            <p> User Score: {Math.trunc(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n                <p>{getGenres(genres) }</p>\n            </div>\n        </Container>\n             <WrapLink>\n            <BtnLink to={`/movies/${id}/cast`}>Cast</BtnLink>\n            <BtnLink to={`/movies/${id}/review`} >Review</BtnLink> \n            </WrapLink>\n    <Suspense>\n         <Outlet />\n    </Suspense>\n    </>    \n    )\n}\n\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const LinkGoBack = styled(NavLink)`\nfont-weight: 500;\ntext-decoration: none;\ncolor:rgb(2, 35, 72);\ndisplay: inline-block;\npadding: 7px;\nborder-radius: 10px;\nbackground-color:lightgrey ;\nmargin: 10px;\n  & :hover {\n    color: rgba(80, 155, 10, 0.789);\n  }\n`","import{LinkGoBack } from './LinkBack.styled'\n\nexport const LinkBack = ({locationLink}) => {\n    return (\n        <LinkGoBack  to={locationLink}>Go Back</LinkGoBack >\n    )\n}","\nimport { useEffect, useState,Suspense } from \"react\";\nimport toast from 'react-hot-toast';\nimport { Loader } from \"Loader/loader\";\nimport { fetchMovieById} from \"components/ApiService\";\nimport {  useParams,Outlet, useLocation  } from \"react-router-dom\";\nimport { MovieDetails } from \"components/movieDetails/movieDetails\";\nimport { LinkBack } from \"components/LinkBack/LinkBack\";\n\n\n\nexport default function MovieDescription ()  {\n    const [object, setData] = useState({});\n    const [loading, setLoading] = useState(false);\n    // eslint-disable-next-line\n    const [error, setError] = useState(false);\n    const params = useParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        async function getMovieById() {\n         setError(false);\n         setLoading(true);            \n        try {\n            const data = await fetchMovieById(params.movieId);\n            toast.success('Successfully created!');\n            setData(data);\n        } catch (error) {\n            toast.error(`This is an error!`);            \n        } finally {\n             setLoading(false);            \n        }\n        }\n        getMovieById()\n    }, [params.movieId])\n    return (\n        <>\n         <LinkBack locationLink={ location.state?.from ?? '/movies'} />   \n            {loading && <Loader />}            \n            <MovieDetails object={object} /> \n        <Suspense fallback={'LOADING ...'}>\n      <Outlet />\n    </Suspense>      \n     </>\n    )\n}\n"],"names":["Container","styled","WrapLink","BtnLink","NavLink","MovieDetails","object","poster_path","title","id","name","original_title","overview","genres","vote_average","src","imageValidation","alt","Math","trunc","undefined","map","el","join","getGenres","to","Suspense","LinkGoBack","LinkBack","locationLink","MovieDescription","useState","setData","loading","setLoading","setError","params","useParams","location","useLocation","useEffect","fetchMovieById","movieId","data","toast","getMovieById","state","from","fallback"],"sourceRoot":""}